import numpy as np

# 3.1.1 密度， 比重とボイル・シャルルの法則 (Density, Specific Gravity, and Boyle-Charles' Law)
def calculate_density(mass, volume):
    """
    質量と体積から密度を計算する関数
    Calculates density from mass and volume.
    
    Parameters:
    mass (float): 質量 (kg)
    volume (float): 体積 (m^3)
    
    Returns:
    float: 密度 (kg/m^3)
    """
    return mass / volume

def boyle_charles_law(initial_pressure, initial_volume, initial_temperature, final_volume, final_temperature):
    """
    ボイル・シャルルの法則を用いて最終圧力を計算する関数
    Calculates final pressure using Boyle-Charles' Law.
    
    Parameters:
    initial_pressure (float): 初期圧力 (Pa)
    initial_volume (float): 初期体積 (m^3)
    initial_temperature (float): 初期温度 (K)
    final_volume (float): 最終体積 (m^3)
    final_temperature (float): 最終温度 (K)
    
    Returns:
    float: 最終圧力 (Pa)
    """
    return initial_pressure * (initial_volume / final_volume) * (final_temperature / initial_temperature)

# 3.1.2 圧縮性 (Compressibility)
def compressibility(initial_volume, final_volume, pressure_change):
    """
    圧縮性係数を計算する関数
    Calculates the compressibility coefficient.
    
    Parameters:
    initial_volume (float): 初期体積 (m^3)
    final_volume (float): 最終体積 (m^3)
    pressure_change (float): 圧力の変化 (Pa)
    
    Returns:
    float: 圧縮性係数 (1/Pa)
    """
    volume_change = final_volume - initial_volume
    return -volume_change / (initial_volume * pressure_change)

# 3.1.3 粘性 (Viscosity)
def calculate_viscosity(shear_stress, velocity_gradient):
    """
    せん断応力と速度勾配から動粘性係数を計算する関数
    Calculates viscosity based on shear stress and velocity gradient.
    
    Parameters:
    shear_stress (float): せん断応力 (Pa)
    velocity_gradient (float): 速度勾配 (1/s)
    
    Returns:
    float: 動粘性係数 (Pa·s)
    """
    return shear_stress / velocity_gradient

# 3.2.1 圧力とその測定 (Pressure and Measurement)
def calculate_pressure(force, area):
    """
    力と面積から圧力を計算する関数
    Calculates pressure from force and area.
    
    Parameters:
    force (float): 力 (N)
    area (float): 面積 (m^2)
    
    Returns:
    float: 圧力 (Pa)
    """
    return force / area

# 3.2.2 マノメータ (Manometer)
def manometer_pressure(density, gravity, height):
    """
    マノメータの液柱の高さから圧力を計算する関数
    Calculates pressure based on manometer height.
    
    Parameters:
    density (float): 液体の密度 (kg/m^3)
    gravity (float): 重力加速度 (m/s^2)
    height (float): 液柱の高さ (m)
    
    Returns:
    float: 圧力 (Pa)
    """
    return density * gravity * height

# 3.2.4 浮力 (Buoyancy)
def buoyant_force(density, volume, gravity=9.81):
    """
    流体の密度と物体の体積から浮力を計算する関数
    Calculates buoyant force based on fluid density and volume of object.
    
    Parameters:
    density (float): 流体の密度 (kg/m^3)
    volume (float): 物体の体積 (m^3)
    gravity (float): 重力加速度 (m/s^2, default=9.81)
    
    Returns:
    float: 浮力 (N)
    """
    return density * volume * gravity

# 3.3.2 連続の式 (Continuity Equation)
def continuity_equation(density1, area1, velocity1, density2, area2):
    """
    流体の連続の式に基づいて2つ目の流速を計算する関数
    Calculates second velocity based on continuity equation.
    
    Parameters:
    density1 (float): 流体1の密度 (kg/m^3)
    area1 (float): 流体1の断面積 (m^2)
    velocity1 (float): 流体1の流速 (m/s)
    density2 (float): 流体2の密度 (kg/m^3)
    area2 (float): 流体2の断面積 (m^2)
    
    Returns:
    float: 流体2の流速 (m/s)
    """
    return (density1 * area1 * velocity1) / (density2 * area2)


# テスト例 (Example usage)

# 3.1.1 密度
mass = 10.0  # 質量 (kg)
volume = 0.005  # 体積 (m^3)
density = calculate_density(mass, volume)
print(f"密度 (Density): {density} kg/m^3")

# ボイル・シャルルの法則
initial_pressure = 101325  # Pa
initial_volume = 1.0  # m^3
initial_temperature = 273  # K
final_volume = 0.8  # m^3
final_temperature = 300  # K
final_pressure = boyle_charles_law(initial_pressure, initial_volume, initial_temperature, final_volume, final_temperature)
print(f"最終圧力 (Final Pressure): {final_pressure} Pa")

# 3.1.2 圧縮性
initial_volume = 1.0  # m^3
final_volume = 0.9  # m^3
pressure_change = 50000  # Pa
compressibility_value = compressibility(initial_volume, final_volume, pressure_change)
print(f"圧縮性 (Compressibility): {compressibility_value} 1/Pa")

# 3.1.3 粘性
shear_stress = 0.5  # Pa
velocity_gradient = 10  # 1/s
viscosity = calculate_viscosity(shear_stress, velocity_gradient)
print(f"動粘性係数 (Viscosity): {viscosity} Pa·s")

# 3.2.1 圧力
force = 100  # N
area = 0.01  # m^2
pressure = calculate_pressure(force, area)
print(f"圧力 (Pressure): {pressure} Pa")

# 3.2.2 マノメータ
density = 1000  # kg/m^3
gravity = 9.81  # m/s^2
height = 0.5  # m
manometer_pressure_value = manometer_pressure(density, gravity, height)
print(f"マノメータの圧力 (Manometer Pressure): {manometer_pressure_value} Pa")

# 3.2.4 浮力
fluid_density = 1000  # kg/m^3
object_volume = 0.03  # m^3
buoyant_force_value = buoyant_force(fluid_density, object_volume)
print(f"浮力 (Buoyant Force): {buoyant_force_value} N")

# 3.3.2 連続の式
density1 = 1000  # kg/m^3
area1 = 0.02  # m^2
velocity1 = 3.0  # m/s
density2 = 1000  # kg/m^3
area2 = 0.01  # m^2
velocity2 = continuity_equation(density1, area1, velocity1, density2, area2)
print(f"流体2の流速 (Velocity of Fluid 2): {velocity2} m/s")
